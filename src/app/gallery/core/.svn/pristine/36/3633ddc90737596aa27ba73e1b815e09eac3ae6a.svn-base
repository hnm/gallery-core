<?php
namespace gallery\core\bo;

use n2n\persistence\orm\CascadeType;
use n2n\persistence\orm\annotation\AnnoOneToMany;
use n2n\persistence\orm\annotation\AnnoOrderBy;
use n2n\persistence\orm\annotation\AnnoTable;
use n2n\reflection\annotation\AnnoInit;
use n2n\reflection\ObjectAdapter;
use n2n\persistence\orm\annotation\AnnoEntityListeners;
use n2n\web\http\orm\ResponseCacheClearer;
use rocket\impl\ei\component\prop\translation\Translator;
use n2n\l10n\N2nLocale;
use n2n\reflection\CastUtils;

class GalleryGroup extends ObjectAdapter {
	private static function _annos(AnnoInit $ai) {
		$ai->c(new AnnoTable('gallery_core_gallery_group'), new AnnoEntityListeners(ResponseCacheClearer::getClass()));
		$ai->p('galleryGroupTs', new AnnoOneToMany(GalleryGroupT::getClass(), 'galleryGroup', CascadeType::ALL, null, true));
		$ai->p('galleries', new AnnoOneToMany(Gallery::getClass(), 'galleryGroup', 
				CascadeType::ALL), new AnnoOrderBy(array('orderIndex' => 'ASC')));
	}
	
	private $id;
	private $galleries;
	private $online = true;
	private $lft;
	private $rgt;
	private $galleryGroupTs;
	
	public function __construct() {
		$this->galleries = new \ArrayObject();
	}
	
	public function getId() {
		return $this->id;
	}

	public function setId($id) {
		$this->id = $id;
	}

	public function getGalleries() {
		return $this->galleries;
	}

	public function setGalleries($galleries) {
		$this->galleries = $galleries;
	}

	/**
	 * @return GalleryGroupT[]
	 */
	public function getGalleryGroupTs() {
		return $this->galleryGroupTs;
	}

	public function setGalleryGroupTs(\ArrayObject $galleryGroupTs) {
		$this->galleryGroupTs = $galleryGroupTs;
	}

	public function isOnline() {
		return (bool) $this->online;
	}
	
	public function setOnline($online) {
		$this->online = $online;
	}

	public function getLft() {
		return $this->lft;
	}

	public function setLft($lft) {
		$this->lft = $lft;
	}

	public function getRgt() {
		return $this->rgt;
	}

	public function setRgt($rgt) {
		$this->rgt = $rgt;
	}
	/**
	 * @return Gallery []
	 */
	public function getOnlineGalleries() {
		$onlineGalleries = array();
		foreach ($this->galleries as $gallery) {
			CastUtils::assertTrue($gallery instanceof Gallery);
			if (!$gallery->isOnline()) continue;
			$onlineGalleries[] = $gallery;
		}
		return $onlineGalleries;
	}
	
	public function equals($o) {
		return $o instanceof GalleryGroup && $o->getId() === $this->id;
	}
	/**
	 * @param N2nLocale[] ...$n2nLocales
	 * @return GalleryGroupT
	 */
	public function t(...$n2nLocales) {
		$n2nLocales[] = N2nLocale::getDefault();
		$n2nLocales[] = N2nLocale::getFallback();
		return Translator::requireAny($this->galleryGroupTs, ...$n2nLocales);
	}
}